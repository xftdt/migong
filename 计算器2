#include<stdio.h>
#include<string.h>
#include<stdlib.h>

int isOperator(char c)
{
	if(c=='+'||c=='-'||c=='*'||c=='/')
		return 1;
	else return 0;
}
void moveOperator(char *p)
{
	while(*p!='\0')
	{
		*p=*(p+1);
		p++;
	}
}
void moveOperand(float *p,float *end)
{	
	while(p!=end)
	{
		*p=*(p+1);
		p++;
	}
}
int main()
{
	//char strExp[]="1-2.5*4+10.2/5.1";
	char strExp[100];
	scanf("%s",strExp);
	char operators[100]={'\0'};
	float operands[100];
	
	int operatorsindex=0;
	for(int i=0;i<strlen(strExp);i++)
	{
		if(isOperator(strExp[i]))
		{
			operators[operatorsindex]=strExp[i];
			operatorsindex++;
		}
	}
	int operandsindex=0;
	for(int i=0;i<strlen(strExp);i++)
	{
		char temp[100]={'\0'};
		int tempindex=0;
		while(!isOperator(strExp[i]))
		{
			temp[tempindex]=strExp[i];
			i++;
			tempindex++;
		}	  
		float floatV=atof(temp);
		operands[operandsindex++]=floatV;
	}
	
	
	char *poperator=operators;
	float *poperand=operands;
	while(*poperator!='\0')
	{
		if(*poperator=='*')
		{
			float leftOperand = *poperand;
			float rightOperand = *(poperand+1);
			float res=leftOperand * rightOperand;
			*poperand=res;
			moveOperator(poperator);
			moveOperand(poperand+1,&operands[operandsindex--]);
		}
		else if(*poperator=='/')
		{
			float leftOperand = *poperand;
			float rightOperand = *(poperand+1);
			float res=leftOperand / rightOperand;
			*poperand=res;
			moveOperator(poperator);
			moveOperand(poperand+1,&operands[operandsindex--]);
		}
		else
		{
			poperator++;
			poperand++;
		}
	}
	poperator=operators;
	poperand=operands;
	while(*poperator!='\0')
	{
		if(*poperator=='+')
		{
			float leftOperand = *poperand;
			float rightOperand = *(poperand+1);
			float res=leftOperand + rightOperand;
			*poperand=res;
			moveOperator(poperator);
			moveOperand(poperand+1,&operands[operandsindex--]);
		}
		else if(*poperator=='-')
		{
			float leftOperand = *poperand;
			float rightOperand = *(poperand+1);
			float res=leftOperand - rightOperand;
			*poperand=res;
			moveOperator(poperator);
			moveOperand(poperand+1,&operands[operandsindex--]);
		}
	}
	printf("the result is %0.2f\n",operands[0]);
	return 0;
}
